"""
Functions for retrieving summary data from a dataset.
"""

from .measurement import ANY, MeasurementType, get_channels


def get_data_table(dataset, measurement_type=ANY, **kwargs):
    """ Get summary data for all `SubChannel` objects in a `Dataset` that
        contain one or more type of sensor data.

        :param channels: A list of channels/subchannels to filter.
        :param measurement_type: A `MeasurementType`, a measurement type 'key'
            string, or a string of multiple keys generated by adding and/or
            subtracting `MeasurementType` objects to filter the results. Any
            'subtracted' types will be excluded.
        :returns: A table of summary data.
    """
    # We don't support multiple sessions on current Slam Stick/enDAQ recorders,
    # but in the event we ever do, this allows one to be specified like so:
    #
    # :param session: A `Session` or session ID to retrieve from a
    #     multi-session recording.
    session = kwargs.get('session', None)
    if session:
        session = getattr(session, 'sessionId', session))

    result = []
    for source in get_channels(dataset, measurement_type):
        data = source.getSession(session)

        # XXX: TODO: Actually build the lists - this is placeholder example stuff
        samples = len(data)
        if samples:
            start = data[0][0]
            end = data[-1][0]
        else:
            start = end = None
        result.append([data, samples, start, end])

    return result
